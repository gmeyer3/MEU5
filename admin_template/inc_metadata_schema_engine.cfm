<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Schema Tools</title><script type="text/javascript" src="http://code.jquery.com/jquery-latest.min.js"></script><script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-collapse.js"></script><link rel="stylesheet" type="text/css" href="http://twitter.github.com/bootstrap/assets/css/bootstrap.css"/><style type="text/css">body {	padding:30px;}.well {	width:auto;}.table {	width:auto!important;}select, textarea, input {	margin-bottom:0!important;}</style></head><body><form action="inc_metadata_schema_engine.cfm" method="post" class="form-search">  <label for="textfield">DSN:</label>  <input type="text" name="dsn" id="dsn" class="input-medium" />  <input class="btn btn-primary" name="submit" type="submit" value="submit" />  <input type="hidden" name="submitted" value="submitted" /></form><div class="well">  <div class="accordion" id="accordion2">    <div class="accordion-group">      <div class="accordion-heading"> <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseTwo">        <h2>Rules:</h2>        </a> </div>      <div id="collapseTwo" class="accordion-body collapse">        <div class="accordion-inner">          <p>Summary: CRUD functions, add/edit/delete forms to be published on demand based on existing schema. Metadata table contains form field label text that associates with all existing tables.</p>          <ol>            <li> Ignore table 'metadata' </li>            <li>ignore field 'ID'</li>            <li>field types to be processed              <ol>                <li>varchar                  <ol>                    <li>used for general purpose text or image uploads</li>                    <li>CHARACTER_MAXIMUM_LENGTH must be read</li>                  </ol>                </li>                <li>int                  <ol>                    <li>used for foreign keys</li>                    <li>foreign table name field will always be 'title'</li>                  </ol>                </li>                <li>tinyint                  <ol>                    <li>used for boolean </li>                    <li>defaults to max length of 1</li>                  </ol>                </li>                <li>smallint                  <ol>                    <li>used for priority (or similar)</li>                    <li>defaults to max length of 4</li>                  </ol>                </li>                <li>text                  <ol>                    <li>used for memo fields</li>                  </ol>                </li>                <li>datetime                  <ol>                    <li>used for dates with an option for time</li>                    <li>if you want to only use time it must be associated with a date</li>                  </ol>                </li>                <li>decimal                  <ol>                    <li>used for floats, prices or flexible numeric only entries</li>                  </ol>                </li>              </ol>            </li>          </ol>        </div>      </div>    </div>  </div></div><cfif structKeyExists(form,'dsn')>    <!--- IF METADATA UPDATES ARE BEING PASSED, PROCESS THEM FIRST --->    <cfif structKeyExists(form,'saveMetadata')>    <cfset metadataUpdate(form.dsn,form)>  </cfif>  <cfif NOT structKeyExists(form,'exportMetadataCode')>        <!--- Create metadata table if needed --->    <cfset createMetadataIfNotExists(form.dsn)>    <cfset countup = 0>    <form action="inc_metadata_schema_engine.cfm" method="post">            <!--- RUN METADATA TABLE CLEANUP TO REMOVE OUTDATED RECORDS --->      <cfset metadataClearUnmatched(form.dsn)>      <cfquery name="tableList" datasource="#form.dsn#">            SELECT table_name FROM INFORMATION_SCHEMA.TABLES              WHERE table_schema = '#form.dsn#'            </cfquery>      <!--- <cfdump var="#tableList#"> --->      <div class="well">        <cfloop query="tableList">          <cfif tablelist.table_name NEQ 'metadata'>            <cfquery name="tableInfo" datasource="#form.dsn#">                    SELECT CHARACTER_MAXIMUM_LENGTH,COLUMN_NAME,DATA_TYPE                      FROM INFORMATION_SCHEMA.COLUMNS                      WHERE table_name = '#tableList.table_name#'                </cfquery>            <!--- <cfdump var="#tableInfo#"> --->                        <table class="table table-striped table-bordered">              <tr>                <td colspan="5"><h2><cfoutput>#tableList.table_name#</cfoutput></h2>                  <cfset tempTableName = tableList.table_name></td>              </tr>              <tr>                <td>field</td>                <td>label</td>                <td>type</td>                <td>fk table</td>                <td>Edit Disp</td>              </tr>              <cfoutput query="tableInfo">                <cfif COLUMN_NAME NEQ 'ID'>                  <cfset countup = countup + 1>                  <cfset metaRowQRS = metadataInsertIF(form.dsn,tableList.table_name,COLUMN_NAME)>                  <tr>                    <td>#metaRowQRS.ref_fieldname#                      <input type="hidden" name="tablename_#countup#" value="#tempTableName#"/>                      <input type="hidden" name="fieldname_#countup#" value="#metaRowQRS.ref_fieldname#"/></td>                    <td><input type="text" name="label_#countup#" value="#metaRowQRS.ref_label#"/></td>                    <td><cfif DATA_TYPE EQ 'varchar'>                        <select name="type_#countup#">                          <cfif metaRowQRS.ref_type EQ ''>                            <option value="" selected="selected">choose</option>                          </cfif>                          <option value="text"<cfif metaRowQRS.ref_type EQ 'text'> selected="selected"</cfif>>text</option>                          <option value="image"<cfif metaRowQRS.ref_type EQ 'image'> selected="selected"</cfif>>image</option>                          <option value="image"<cfif metaRowQRS.ref_type EQ 'file'> selected="selected"</cfif>>file</option>                        </select>                        <cfelseif DATA_TYPE EQ 'int'>                        fkey                        <input type="hidden" name="type_#countup#" value="fkey"/>                        <cfelseif DATA_TYPE EQ 'tinyint'>                        boolean                        <input type="hidden" name="type_#countup#" value="boolean"/>                        <cfelseif DATA_TYPE EQ 'smallint'>                        pri/num(4)                        <input type="hidden" name="type_#countup#" value="prinum"/>                        <cfelseif DATA_TYPE EQ 'text'>                        memo                        <input type="hidden" name="type_#countup#" value="memo"/>                        <cfelseif DATA_TYPE EQ 'datetime'>                        datetime                        <input type="hidden" name="type_#countup#" value="datetime"/>                        <cfelseif DATA_TYPE EQ 'decimal'>                        float/price                        <input type="hidden" name="type_#countup#" value="decimal"/>                      </cfif></td>                    <td style="background-color:##eee"><cfif DATA_TYPE EQ 'int'>                        <select name="fkey_table_name_#countup#">                          <cfif metaRowQRS.fkey_table_name EQ ''>                            <option value="" selected="selected">choose</option>                          </cfif>                          <cfloop query="tableList">                            <cfif tableList.table_name NEQ tempTableName AND tableList.table_name NEQ 'metadata'>                              <option value="#tableList.table_name#"<cfif metaRowQRS.fkey_table_name EQ tableList.table_name> selected="selected"</cfif>>#tableList.table_name#</option>                            </cfif>                          </cfloop>                        </select>                        <cfelse>                        <input type="hidden" name="fkey_table_name_#countup#" value=""/>                      </cfif></td>                    <td> YES                      <input type="radio" value="1" name="edit_list_display_#countup#" <cfif metaRowQRS.edit_list_display>checked="checked"</cfif>/>                      &nbsp;                      NO                      <input type="radio" value="0" name="edit_list_display_#countup#" <cfif NOT metaRowQRS.edit_list_display>checked="checked"</cfif>/></td>                  </tr>                </cfif>              </cfoutput>            </table>          </cfif>        </cfloop>      </div>      <input type="hidden" name="fieldCountup" value="<cfoutput>#countup#</cfoutput>" />      <input type="hidden" name="saveMetadata" value="true" />      <input type="hidden" name="dsn" value="<cfoutput>#form.dsn#</cfoutput>" />      <input class="btn btn-primary" type="submit" value="SAVE METADATA" />    </form>    <form action="inc_metadata_schema_engine.cfm" method="post">      <input class="btn btn-primary" type="submit" value="EXPORT CODE" />      <input type="hidden" name="dsn" value="<cfoutput>#form.dsn#</cfoutput>" />      <input type="hidden" name="exportMetadataCode" value="true" />    </form>        <!--- get all table/column rows --->     <!---   <cfquery name="tablesColumnsAll" datasource="#form.dsn#">                    SELECT TABLE_NAME,COLUMN_NAME                      FROM INFORMATION_SCHEMA.COLUMNS                        WHERE table_schema = '#form.dsn#' AND table_name <> 'metadata' AND column_name <> 'ID'                </cfquery>                <cfdump var="#tablesColumnsAll#">                                <cfquery name="allMetadata" datasource="#form.dsn#">                    SELECT * FROM metadata                    ORDER BY ref_tablename, ref_fieldname                </cfquery>                <cfdump var="#allMetadata#">--->      </cfif>  <!--- END IF  <cfif NOT structKeyExists(form,'exportMetadataCode')> --->     <!--- PROCESS METADATA CODE --->  <cfif structKeyExists(form,'exportMetadataCode')>    <h3>Exported CRUD functions</h3>    <cfquery name="getTables" datasource="#form.dsn#">            show tables        </cfquery>        <!--- <cfquery name="getTables" datasource="#form.dsn#">            SELECT * FROM INFORMATION_SCHEMA.TABLES              WHERE table_schema = '#form.dsn#' AND table_name <> 'metadata'            </cfquery> --->        <cfset bigString = "">    <cfloop query="getTables">      <cfset tableNameHolder = 'getTables.TABLES_IN_' & form.dsn>      <cfset tableName = #evaluate(tableNameHolder)#>      <cfif tableName NEQ 'metadata'>        <cfquery name="descSQL" datasource="#form.dsn#">		desc #tableName#	</cfquery>                <!--- <cfdump var="#descSQL#"> --->                <cfset tempDescSQL = descSQL>        <cfset tempDescList = "">        <cfloop query="tempDescSQL">          <cfset tempDescList = tempDescList & tempDescSQL.field & '^' & tempDescSQL.type>          <cfif tempDescSQL.currentrow LT tempDescSQL.recordcount>            <cfset tempDescList = tempDescList & ','>          </cfif>        </cfloop>                <!--- SORT TEMPDESCLIST ALPHABETICALLY!!! --->        <cfset tempDescList = listSort(tempDescList, 'textnocase')>                <!---  <cfdump var="#tempDescList#"><br /><br /><br /><br /> --->                 <!--- <cfdump var="#tempDescSQL#"> --->                <cfset colList = "">        <cfset colList_edit_disp = "">        <cfset fieldStructString = "">        <!--- THIS IS USED IN THE UPDATE STATEMENT --->        <cfset fieldStructString2 = "">        <!--- THIS IS USED IN THE UPDATE BASIC STATEMENT --->        <cfset fieldInsertString = "(">        <!--- THIS IS USED IN THE INSERT STATEMENT --->                 <!--- Loop to create UPDATE statement --->         <cfoutput query="tempDescSQL">          <cfif field NEQ 'ID'>            <cfquery name="metaRow" datasource="#form.dsn#">                SELECT * FROM metadata                WHERE ref_tablename = '#tablename#' AND ref_fieldname = '#field#'            </cfquery>            <cfif metaRow.edit_list_display>              <cfset colList_edit_disp = colList_edit_disp & field>              <cfif currentrow LT recordcount>                <cfset colList_edit_disp = colList_edit_disp & ',' & chr(10)>              </cfif>            </cfif>          </cfif>          <cfset colList = colList & field>          <cfif currentrow LT recordcount>            <cfset colList = colList & ',' & chr(10) & '          '>          </cfif>                    <!--- UPDATE STATEMENT CREATION HERE --->          <cfif field NEQ 'ID'>            <cfset fieldStructString = fieldStructString & "         &lt;cfif arguments.byPassNulls>" & chr(10)>            <cfset fieldStructString = fieldStructString & "              &lt;cfif arguments.colStruct." & field & " NEQ ''>" & chr(10)>            <cfset fieldStructString = fieldStructString  & '                     ' & field & ' = &lt;cfqueryparam  ' & cfMySQLType(type,field) & ' value="##arguments.colStruct.' & field & '##">'>            <cfif currentrow LT recordcount>              <cfset fieldStructString = fieldStructString & ',' & chr(10)>            </cfif>            <cfset fieldStructString = fieldStructString & "                &lt;/cfif>" & chr(10)>          </cfif>          <cfif field NEQ 'ID'>            <cfset fieldStructString = fieldStructString & "         &lt;cfelse>" & chr(10)>            <cfset fieldStructString = fieldStructString & chr(10) & '                     ' & field & ' = &lt;cfqueryparam  ' & cfMySQLType(type,field) & ' value="##arguments.colStruct.' & field & '##">'>            <cfif currentrow LT recordcount>              <cfset fieldStructString = fieldStructString & ',' & chr(10)>            </cfif>            <cfset fieldStructString = fieldStructString & "        &lt;/cfif>" & chr(10)>          </cfif>                    <!--- UPDATE BASIC STATEMENT CREATION HERE --->                    <cfif field NEQ 'ID'>            <cfset fieldStructString2 = fieldStructString2  & '                     ' & field & ' = &lt;cfqueryparam  ' & cfMySQLType(type,field) & ' value="##arguments.colStruct.' & field & '##">'>            <cfif currentrow LT recordcount>              <cfset fieldStructString2 = fieldStructString2 & ',' & chr(10)>            </cfif>          </cfif>        </cfoutput>         <!--- Clean up straggling commas from colList_edit_disp string --->        <cfset colList_edit_disp =  trim(colList_edit_disp)>        <cfif right(colList_edit_disp,1) EQ ','>          <cfset colList_edit_disp = mid(colList_edit_disp,1,len(colList_edit_disp) - 1)>        </cfif>                <!--- Loops to create INSERT statement --->         <cfoutput query="tempDescSQL">                     <!--- INSERT STATEMENT FIELD LIST CREATION HERE --->          <cfif field NEQ 'ID'>            <cfset fieldInsertString = fieldInsertString & field>            <cfif currentrow LT recordcount>              <cfset fieldInsertString = fieldInsertString & ','>            </cfif>          </cfif>        </cfoutput>        <cfset fieldInsertString = fieldInsertString & ')' & chr(10)>        <cfset fieldInsertString = fieldInsertString & 'VALUES ('>        <cfoutput query="tempDescSQL">                     <!--- INSERT STATEMENT VALUE LIST CREATION HERE --->          <cfif field NEQ 'ID'>            <cfset fieldInsertString = fieldInsertString & '&lt;cfqueryparam  ' & cfMySQLType(type,field) & ' value="##arguments.colStruct.' & field & '##">'>            <cfif currentrow LT recordcount>              <cfset fieldInsertString = fieldInsertString & ',' & chr(10)>            </cfif>          </cfif>        </cfoutput>        <cfset fieldInsertString = fieldInsertString & ')'>                <!--- Main Schema Output Code --->        <cfsavecontent variable="textChunk">        <cfoutput> &lt;!--- #tableName# SELECT   --->          &lt;cffunction name="get_#tableName#" output="no" returntype="query">          &lt;cfargument name="dsn" type="string" required="yes">          &lt;cfargument name="ID" type="numeric" default=0>          &lt;cfset var constraintstring = "">          &lt;cfif arguments.ID NEQ 0>          &lt;cfset constraintstring = "WHERE ID = " & arguments.ID>          &lt;/cfif>          &lt;cfquery name="qrs" datasource="##arguments.dsn##">          SELECT #colList# FROM #tableName# ##constraintstring## &lt;/cfquery>          &lt;cfreturn qrs>          &lt;/cffunction>                                        &lt;!--- #tableName# SELECT edit display   --->          &lt;cffunction name="get_#tableName#_edit" output="no" returntype="query">          &lt;cfargument name="dsn" type="string" required="yes">          &lt;cfargument name="ID" type="numeric" default=0>          &lt;cfset var constraintstring = "">          &lt;cfif arguments.ID NEQ 0>          &lt;cfset constraintstring = "WHERE ID = " & arguments.ID>          &lt;/cfif>          &lt;cfquery name="qrs" datasource="##arguments.dsn##">          SELECT #colList_edit_disp# FROM #tableName# ##constraintstring## &lt;/cfquery>          &lt;cfreturn qrs>          &lt;/cffunction>                                                  &lt;!--- #tableName# INSERT   --->          &lt;cffunction name="insert_#tableName#" output="no">          &lt;cfargument name="dsn" type="string" required="yes">          &lt;cfargument name="colStruct" type="struct" required="yes">                    &lt;cfquery name="qrs" datasource="##arguments.dsn##">          INSERT INTO #tableName# #fieldInsertString# &lt;/cfquery>                    &lt;/cffunction>                                                  &lt;!--- #tableName# UPDATE   --->          &lt;cffunction name="set_#tableName#" output="no">          &lt;cfargument name="dsn" type="string" required="yes">          &lt;cfargument name="colStruct" type="struct" required="yes">          &lt;cfargument name="byPassNulls" type="boolean" default="true">          &lt;cfargument name="ID" type="numeric" default=0>          &lt;cfset var constraintstring = "">          &lt;cfif arguments.ID NEQ 0>          &lt;cfset constraintstring = "WHERE ID = " & arguments.ID>          &lt;/cfif>          &lt;cfquery name="qrs" datasource="##arguments.dsn##">          UPDATE #tableName# SET #fieldStructString# ##constraintstring## &lt;/cfquery>                    &lt;/cffunction>                                                            &lt;!--- #tableName# UPDATE BASIC  --->          &lt;cffunction name="set_#tableName#_BASIC" output="no">          &lt;cfargument name="dsn" type="string" required="yes">          &lt;cfargument name="colStruct" type="struct" required="yes">          &lt;cfargument name="ID" type="numeric" default=0>          &lt;cfset var constraintstring = "">          &lt;cfif arguments.ID NEQ 0>          &lt;cfset constraintstring = "WHERE ID = " & arguments.ID>          &lt;/cfif>          &lt;cfquery name="qrs" datasource="##arguments.dsn##">          UPDATE #tableName# SET #fieldStructString2# ##constraintstring## &lt;/cfquery>                    &lt;/cffunction>                                                            &lt;!--- #tableName# DELETE   --->          &lt;cffunction name="del_#tableName#" output="no">          &lt;cfargument name="dsn" type="string" required="yes">          &lt;cfargument name="ID" type="numeric" required="yes">          &lt;cfset var constraintstring = "">          &lt;cfif arguments.ID NEQ 0>          &lt;cfset constraintstring = "WHERE ID = " & arguments.ID>          &lt;/cfif>          &lt;cfquery name="qrs" datasource="##arguments.dsn##">          DELETE           FROM #tableName# ##constraintstring## &lt;/cfquery>          &lt;/cffunction>                                        &lt;!--- END  ------- #tableName# CRUD  -----   --->          &lt;!--- END  ------- #tableName# CRUD  -----   --->          &lt;!--- END  ------- #tableName# CRUD  -----   --->          &lt;!--- END  ------- #tableName# CRUD  -----   --->          &lt;!--- END  ------- #tableName# CRUD  -----   --->          &lt;!--- END  ------- #tableName# CRUD  -----   ---> </cfoutput>        </cfsavecontent>        <cfset bigString = bigString & chr(10) & textChunk>      </cfif>    </cfloop>    <textarea style="width:700px;height:500px;"><cfoutput>#bigString#</cfoutput></textarea>    <h3>Exported FORM structure</h3>    <textarea style="width:700px;height:500px;">    <cfquery name="tableList" datasource="#form.dsn#">            SELECT table_name FROM INFORMATION_SCHEMA.TABLES              WHERE table_schema = '#form.dsn#'            </cfquery>    <cfloop query="tableList">    <cfif tablelist.table_name NEQ 'metadata'>    <cfquery name="tableInfo" datasource="#form.dsn#">                        SELECT CHARACTER_MAXIMUM_LENGTH,COLUMN_NAME,DATA_TYPE                          FROM INFORMATION_SCHEMA.COLUMNS                          WHERE table_name = '#tableList.table_name#'                    </cfquery>    <!------------------------------------------------<cfoutput>#tableList.table_name# ADD FORM</cfoutput>  ------------------------------------------------> <div class="accordion-group">  <div class="accordion-heading"> <a href="#collapseQuickV2" data-parent="#accordion2" data-toggle="collapse" class="accordion-toggle btn btn-primary" style="text-align: left;text-decoration: none"> <i class="icon-edit"></i> Add Item <i class="icon-plus pull-right"></i> </a> </div>  <div class="accordion-body collapse" id="collapseQuickV2">    <div style="background-color: #ffffff;" class="accordion-inner">      <h2><cfoutput>#tableList.table_name#</cfoutput> Admin</h2>      <hr>    &lt;form action="&lt;cfoutput>#thisScript#&lt;/cfoutput>" method="post" enctype="multipart/form-data" class="form-horizontal" id="Add_form">    <cfset tempTableName = tableList.table_name>    <cfloop query="tableInfo">    <cfif tableInfo.COLUMN_NAME NEQ 'ID'>    <cfquery name="metaRowQRS" datasource="#form.dsn#">                            	SELECT * FROM metadata                                WHERE ref_tablename = '#tableList.table_name#' AND ref_fieldname = '#tableInfo.column_name#'                            </cfquery>    <cfloop query="metaRowQRS">    <cfoutput>    <div class="control-group">    <label class="control-label" for="#metaRowQRS.ref_fieldname#">#metaRowQRS.ref_label#</label>    <div class="controls">    <cfif metaRowQRS.ref_type EQ 'text'>    <input type="text" name="#metaRowQRS.ref_fieldname#" class="input" maxlength="#tableInfo.CHARACTER_MAXIMUM_LENGTH#" />    </cfif>    <cfif metaRowQRS.ref_type EQ 'image'>    <input type="file" name="#metaRowQRS.ref_fieldname#" class="input" maxlength="#tableInfo.CHARACTER_MAXIMUM_LENGTH#" />    </cfif>    <cfif metaRowQRS.ref_type EQ 'memo'>    &lt;textarea name="#metaRowQRS.ref_fieldname#" class="textarea span12" rows="10">&lt;/textarea>    </cfif>    <cfif metaRowQRS.ref_type EQ 'datetime'>    <input type="text" name="#metaRowQRS.ref_fieldname#" class="input" />    </cfif>    <cfif metaRowQRS.ref_type EQ 'boolean'>    YES    <input type="radio" name="#metaRowQRS.ref_fieldname#" value="1" checked="checked" />    NO    <input type="radio" name="#metaRowQRS.ref_fieldname#" value="0" />    </cfif>    <cfif metaRowQRS.ref_type EQ 'prinum'>    <input type="text" name="#metaRowQRS.ref_fieldname#" class="input-mini"  maxlength="4" />    </cfif>    <cfif metaRowQRS.ref_type EQ 'decimal'>    <input type="text" name="#metaRowQRS.ref_fieldname#" class="input-mini"  maxlength="8" />    </cfif>    <cfif metaRowQRS.ref_type EQ 'fkey'>    &lt;cfset qrs_#metaRowQRS.fkey_table_name# = get_#metaRowQRS.fkey_table_name#(dsn)>    <select name="#metaRowQRS.ref_fieldname#">      <option value="0">NONE</option>      &lt;cfoutput query="qrs_#metaRowQRS.fkey_table_name#">      <option value="##ID##">##title##</option>      &lt;/cfoutput>    </select>  </cfif>  </div>  </div>  </cfoutput>  </cfloop></cfif></cfloop><button class="btn btn-primary btn-large"><span>ADD </span> <i class="icon-plus icon-white"></i></button><input type="hidden" name="action" value="add" />&lt;/form>     </div>  </div></div><!-- end accordion  --><!--- END ADD FORM  ---> <!------------------------------------------------<cfoutput>#tableList.table_name# EDIT FORM</cfoutput> ------------------------------------------------> &lt;cfset qrs_<cfoutput>#tableList.table_name#</cfoutput> = get_<cfoutput>#tableList.table_name#</cfoutput>(dsn,url.edit)>&lt;cfoutput query="qrs_<cfoutput>#tableList.table_name#</cfoutput>">  <div class="accordion-group">    <div class="accordion-heading"> <a href="##collapseQuickV3" data-parent="##accordion2" data-toggle="collapse" class="accordion-toggle btn btn-warning" style="text-align: left;text-decoration: none"> <i class="icon-edit"></i> Edit Item <i class="icon-edit pull-right"></i> </a> </div>    <div class="accordion-body collapse in" id="collapseQuickV3">      <div style="background-color: ##ffffff;" class="accordion-inner">        <h2><cfoutput>#tableList.table_name#</cfoutput> Admin</h2>        <hr>        &lt;form action="&lt;cfoutput>#thisScript#&lt;/cfoutput>" method="post" enctype="multipart/form-data" class="form-horizontal" id="Edit_form"><cfset tempTableName = tableList.table_name><cfloop query="tableInfo">  <cfif tableInfo.COLUMN_NAME NEQ 'ID'>    <cfquery name="metaRowQRS" datasource="#form.dsn#">                            	SELECT * FROM metadata                                WHERE ref_tablename = '#tableList.table_name#' AND ref_fieldname = '#tableInfo.column_name#'                            </cfquery>    <cfloop query="metaRowQRS">      <cfoutput>        <div class="control-group">          <label class="control-label" for="#metaRowQRS.ref_fieldname#">#metaRowQRS.ref_label#</label>          <div class="controls">            <cfif metaRowQRS.ref_type EQ 'text'>              <input type="text" name="#metaRowQRS.ref_fieldname#" value="###metaRowQRS.ref_fieldname###" class="input" maxlength="#tableInfo.CHARACTER_MAXIMUM_LENGTH#" />            </cfif>            <cfif metaRowQRS.ref_type EQ 'image'>              <input type="file" name="#metaRowQRS.ref_fieldname#" class="input" maxlength="#tableInfo.CHARACTER_MAXIMUM_LENGTH#" />            </cfif>            <cfif metaRowQRS.ref_type EQ 'memo'>              &lt;textarea name="#metaRowQRS.ref_fieldname#" class="textarea span12" rows="10">###metaRowQRS.ref_fieldname###&lt;/textarea>            </cfif>            <cfif metaRowQRS.ref_type EQ 'datetime'>              <input type="text" name="#metaRowQRS.ref_fieldname#" value="##dateFormat(#metaRowQRS.ref_fieldname#,'mm/dd/yyyy')##" class="input" />            </cfif>            <cfif metaRowQRS.ref_type EQ 'boolean'>              YES              <input type="radio" name="#metaRowQRS.ref_fieldname#" value="1" &lt;cfif #metaRowQRS.ref_fieldname# eq 1>              checked="checked"&lt;/cfif> /> NO              <input type="radio" name="#metaRowQRS.ref_fieldname#" value="0" &lt;cfif #metaRowQRS.ref_fieldname# eq 0>              checked="checked"&lt;/cfif> />            </cfif>            <cfif metaRowQRS.ref_type EQ 'prinum'>              <input type="text" name="#metaRowQRS.ref_fieldname#" value="###metaRowQRS.ref_fieldname###" class="input-mini"  maxlength="4" />            </cfif>            <cfif metaRowQRS.ref_type EQ 'decimal'>              <input type="text" name="#metaRowQRS.ref_fieldname#" value="###metaRowQRS.ref_fieldname###" class="input-mini"  maxlength="8" />            </cfif>            <cfif metaRowQRS.ref_type EQ 'fkey'>              &lt;cfset qrs_#metaRowQRS.fkey_table_name# = get_#metaRowQRS.fkey_table_name#(dsn)>              &lt;cfset qrs_#metaRowQRS.fkey_table_name#_selected = get_#metaRowQRS.fkey_table_name#(dsn,qrs_<cfoutput>#tableList.table_name#.#metaRowQRS.ref_fieldname#</cfoutput>)>              <select name="#metaRowQRS.ref_fieldname#">                <option value="0">NONE</option>                <option value="##qrs_#metaRowQRS.fkey_table_name#_selected.ID##" selected="selected">##qrs_#metaRowQRS.fkey_table_name#_selected.title##</option>                &lt;cfloop query="qrs_#metaRowQRS.fkey_table_name#">                <option value="##ID##">##title##</option>                &lt;/cfloop>              </select>            </cfif>          </div>        </div>      </cfoutput>    </cfloop>  </cfif></cfloop><button class="btn btn-warning btn-large"><span>SAVE </span> <i class="icon-edit icon-white"></i></button><input type="hidden" name="action" value="edit" /><input type="hidden" name="rid" value="#url.edit#"/>&lt;/form>      </div>    </div>  </div>  <!-- end accordion  --> &lt;/cfoutput><!-------------------------------------------------------<cfoutput>#tableList.table_name# EDIT ITEMS DISPLAY</cfoutput> -------------------------------------------------------> <div class="accordion" id="accordionPagination">  <div class="accordion-group">    <div class="accordion-heading"> <a style="text-align: left;text-decoration: none" class="accordion-toggle btn"                           data-toggle="collapse" data-parent="#accordion2" href="#collapsePagination"> <i class="icon-list"></i> <cfoutput>#metaRowQRS.ref_tablename# </cfoutput><i class="icon-minus pull-right"></i> </a> </div>    <div id="collapsePagination" class="accordion-body collapse in">      <div class="accordion-inner" style="background-color: #ffffff;">        <cfoutput> &lt;cfset qrs_#metaRowQRS.ref_tablename# = get_#metaRowQRS.ref_tablename#(dsn)></cfoutput>        <table cellpadding="0" cellspacing="0" border="0" class="table table-bordered" id="example">          <thead>            <tr>              <th></th>			                <cfset tempTableName = tableList.table_name>                <cfloop query="tableInfo">                  <cfif tableInfo.COLUMN_NAME NEQ 'ID'>                    <cfquery name="metaRowQRS" datasource="#form.dsn#">                        SELECT * FROM metadata                        WHERE ref_tablename = '#tableList.table_name#' AND ref_fieldname = '#tableInfo.column_name#'                    </cfquery>                    <cfloop query="metaRowQRS">                      <cfoutput>                        <cfif metaRowQRS.edit_list_display EQ 1>                        	<th>#metaRowQRS.ref_label#</th>                        </cfif>                        </cfoutput>                    </cfloop>                  </cfif>                </cfloop>                            <th></th>            </tr>          </thead>          <tbody>             &lt;cfoutput query="qrs_<cfoutput>#metaRowQRS.ref_tablename#</cfoutput>">             <tr&lt;cfif NOT enabled> class="not_enabled"&lt;/cfif>>             	<td><a href="#thisScript#?edit=#id#" class="btn btn-mini btn-warning"><i class="icon-edit"></i> edit</a></td>                          <cfloop query="tableInfo">                  <cfif tableInfo.COLUMN_NAME NEQ 'ID'>                    <cfquery name="metaRowQRS" datasource="#form.dsn#">                        SELECT * FROM metadata                        WHERE ref_tablename = '#tableList.table_name#' AND ref_fieldname = '#tableInfo.column_name#'                    </cfquery>                    <cfloop query="metaRowQRS">                      <cfoutput>                        <cfif metaRowQRS.edit_list_display EQ 1>                        	<cfif metaRowQRS.ref_type EQ 'image'>                                <td>                                 &lt;cfif isDefined('img')>                                &lt;cfif img NEQ ''>                                    <button style="cursor:pointer" onclick="imgModal('../assets/img_partner_logos/##suffixAppend(img,"_800")##');" class="btn btn-mini"><i class="icon-picture"></i> zoom</button>                                   &lt;/cfif>                                   &lt;/cfif>                               </td>                            <cfelseif metaRowQRS.ref_type EQ 'fkey'>                            	&lt;cfset qrs_#metaRowQRS.fkey_table_name#_selected = get_#metaRowQRS.fkey_table_name#(dsn,qrs_#tableList.table_name#.#metaRowQRS.ref_fieldname#)>                                <td>##qrs_#metaRowQRS.fkey_table_name#_selected.title##</td>                            <cfelse>                                <td>###metaRowQRS.ref_fieldname###</td>                            </cfif>                        </cfif>                        </cfoutput>                    </cfloop>                  </cfif>                </cfloop>                                       		                    <td class="center"><button class="btn btn-mini btn-danger" onclick="confirmation(#id#,'[Dynamic Column Name Here...]');"><i class="icon-trash"></i> delete</button></td>             </tr>             &lt;/cfoutput>          </tbody>        </table>      </div>    </div>  </div></div></cfif></cfloop><cfloop query="tableInfo">  #tableInfo.column_name#: {  required: true  //,email: true  }  <cfif tableInfo.currentRow LT tableInfo.recordCount>    ,  </cfif></cfloop></textarea></cfif></cfif><!--- MAIN UDF ---><cffunction name="metadataUpdate" output="no">  <cfargument name="dsn" required="yes" type="string">  <cfargument name="formStruct" required="yes" type="struct">  <cfset var tablename = "">  <cfset var fieldname = "">  <cfloop from="1" to="#arguments.formStruct.fieldCountup#" index="idx">    <cfset label = #evaluate('arguments.formStruct.label_#idx#')#>    <cfset type = #evaluate('arguments.formStruct.type_#idx#')#>    <cfset fkey_table_name = #evaluate('arguments.formStruct.fkey_table_name_#idx#')#>    <cfset edit_list_display = #evaluate('arguments.formStruct.edit_list_display_#idx#')#>    <cfset tablename = #evaluate('arguments.formStruct.tablename_#idx#')#>    <cfset fieldname = #evaluate('arguments.formStruct.fieldname_#idx#')#>    <cfquery name="updateMetadata" datasource="#arguments.dsn#">    UPDATE	metadata    SET ref_label = '#label#',    	ref_type = '#type#',        fkey_table_name = '#fkey_table_name#',        edit_list_display = '#edit_list_display#'	WHERE ref_tablename = '#tablename#' AND ref_fieldname = '#fieldname#'    </cfquery>  </cfloop></cffunction><cffunction name="metadataInsertIF" output="no">  <cfargument name="dsn" required="yes" type="string">  <cfargument name="table_name" required="yes" type="string">  <cfargument name="column_name" required="yes" type="string">    <!--- If the table name and column name are not listed in the metadata table, create them with a null label but have other data filled in as much as possible --->  <cfquery name="recExists" datasource="#arguments.dsn#">	SELECT * FROM metadata    WHERE ref_tablename = '#arguments.table_name#' AND ref_fieldname = '#arguments.column_name#'</cfquery>  <cfif NOT recExists.recordCount>    <cfquery name="insertMetadata" datasource="#arguments.dsn#">    	INSERT INTO metadata        (ref_tablename,ref_fieldname)        VALUES        ('#arguments.table_name#','#arguments.column_name#')    </cfquery>    <cfquery name="recExists" datasource="#arguments.dsn#">		SELECT * FROM metadata    	WHERE ref_tablename = '#arguments.table_name#' AND ref_fieldname = '#arguments.column_name#'	</cfquery>  </cfif>  <cfreturn recExists></cffunction><!--- go through existing metadata records and compare against current table structure. Remove records that refer to non-existent tables/rows ---><cffunction name="metadataClearUnmatched" output="no">  <cfargument name="dsn" required="yes" type="string">  <cfset idArray = arrayNew(1)>    <!--- get all table/column rows --->  <cfquery name="tablesColumnsAll" datasource="#form.dsn#">    	SELECT TABLE_NAME,COLUMN_NAME          FROM INFORMATION_SCHEMA.COLUMNS			WHERE table_schema = '#form.dsn#' AND table_name <> 'metadata' AND column_name <> 'ID'    </cfquery>    <!--- first, remove records that don't match existing tables --->   <!--- get current metadata rows --->  <cfquery name="metaRecords" datasource="#arguments.dsn#">        SELECT * FROM metadata        ORDER BY ref_tablename,ref_fieldname    </cfquery>  <cfloop query="metaRecords">    <cfquery name="findTableName" dbtype="query">            SELECT *            FROM tablesColumnsAll            WHERE table_name = '#metaRecords.ref_tablename#'        </cfquery>    <cfif NOT findTableName.recordCount>      <!--- <cfquery name="deleteCurrentMetaRow" datasource="#arguments.dsn#">            	DELETE FROM metadata                WHERE ID = <cfqueryparam cfsqltype="cf_sql_integer" value="#metaRecords.ID#" null="#len(metaRecords.ID)#">            </cfquery> --->      <cfset arrayAppend(idArray,metaRecords.ID)>    </cfif>  </cfloop>    <!--- last, remove records that don't match existing tables/fields --->   <!--- get current metadata rows --->  <cfquery name="metaRecords" datasource="#arguments.dsn#">        SELECT * FROM metadata        ORDER BY ref_tablename,ref_fieldname    </cfquery>  <cfloop query="metaRecords">    <cfquery name="findTableName" dbtype="query">            SELECT *            FROM tablesColumnsAll            WHERE column_name = '#metaRecords.ref_fieldname#'        </cfquery>    <cfif NOT findTableName.recordCount>      <!--- <cfquery name="deleteCurrentMetaRow" datasource="#arguments.dsn#">            	DELETE FROM metadata                WHERE ID = <cfqueryparam cfsqltype="cf_sql_integer" value="#metaRecords.ID#" null="#len(metaRecords.ID)#">            </cfquery> --->      <cfset arrayAppend(idArray,metaRecords.ID)>    </cfif>  </cfloop>    <!--- DELETE LIST OF OFFENDING ROWS --->  <cfif arrayLen(idArray)>    <cfquery name="deleteCurrentMetaRow" datasource="#arguments.dsn#">            DELETE FROM metadata            WHERE ID IN (#arrayToList(idArray,',')#)        </cfquery>  </cfif></cffunction><cffunction name="createMetadataIfNotExists" output="no">  <cfargument name="dsn" required="yes" type="string">  <cfquery name="createMeta" datasource="#arguments.dsn#">CREATE TABLE IF NOT EXISTS `metadata` (  `ID` int(11) NOT NULL AUTO_INCREMENT,  `ref_tablename` varchar(45) DEFAULT NULL,  `ref_fieldname` varchar(45) DEFAULT NULL,  `ref_label` varchar(150) DEFAULT NULL,  `ref_type` varchar(20) DEFAULT NULL,  `fkey_table_name` varchar(45) DEFAULT NULL,  `edit_list_display` tinyint(1) DEFAULT 1,  PRIMARY KEY (`ID`),  UNIQUE KEY `ID_UNIQUE` (`ID`)) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=15 ;</cfquery></cffunction><!--- UDF FOR CRUD ---><cffunction name="cfMySQLType" output="false" returntype="string">  <cfargument name="sqlTypeString" type="string" required="yes">  <cfargument name="theVar" type="string" required="yes">  <cfset var returnString = "">  <cfif trim(arguments.sqlTypeString) EQ  'bigint'>    <cfset returnString = 'cfsqltype="CF_SQL_BIGINT" null="##NOT len(arguments.colStruct.' & arguments.theVar & ')##"'>  </cfif>  <cfif trim(listGetAt(arguments.sqlTypeString,1,'(')) EQ  'char'>    <cfset returnString = 'cfsqltype="CF_SQL_CHAR"'>  </cfif>  <cfif trim(listGetAt(arguments.sqlTypeString,1,'(')) EQ  'date'>    <cfset returnString = 'cfsqltype="CF_SQL_DATE"'>  </cfif>  <cfif trim(listGetAt(arguments.sqlTypeString,1,'(')) EQ  'decimal'>    <cfset returnString = 'cfsqltype="CF_SQL_DECIMAL" null="##NOT len(arguments.colStruct.' & arguments.theVar & ')##"'>  </cfif>  <cfif trim(listGetAt(arguments.sqlTypeString,1,'(')) EQ  'double'>    <cfset returnString = 'cfsqltype="CF_SQL_DOUBLE" null="##NOT len(arguments.colStruct.' & arguments.theVar & ')##"'>  </cfif>  <cfif trim(listGetAt(arguments.sqlTypeString,1,'(')) EQ  'mediumint' OR trim(listGetAt(arguments.sqlTypeString,1,'(')) EQ  'int'>    <cfset returnString = 'cfsqltype="CF_SQL_INTEGER" null="##NOT len(arguments.colStruct.' & arguments.theVar & ')##"'>  </cfif>  <cfif trim(listGetAt(arguments.sqlTypeString,1,'(')) EQ  'text' OR trim(listGetAt(arguments.sqlTypeString,1,'(')) EQ  'mediumtext' OR trim(listGetAt(arguments.sqlTypeString,1,'(')) EQ 'longtext'>    <cfset returnString = 'cfsqltype="CF_SQL_LONGVARCHAR"'>  </cfif>  <cfif trim(listGetAt(arguments.sqlTypeString,1,'(')) EQ  'smallint'>    <cfset returnString = 'cfsqltype="CF_SQL_SMALLINT" null="##NOT len(arguments.colStruct.' & arguments.theVar & ')##"'>  </cfif>  <cfif trim(listGetAt(arguments.sqlTypeString,1,'(')) EQ  'tinyint'>    <cfset returnString = 'cfsqltype="CF_SQL_TINYINT" null="##NOT len(arguments.colStruct.' & arguments.theVar & ')##"'>  </cfif>  <cfif trim(listGetAt(arguments.sqlTypeString,1,'(')) EQ  'varchar'>    <cfset returnString = 'cfsqltype="CF_SQL_VARCHAR"'>  </cfif>  <cfreturn returnString></cffunction><cffunction name="shortType" output="false" returntype="string">  <cfargument name="sqlTypeString" type="string" required="yes">  <cfset var returnString = "">  <cfif trim(arguments.sqlTypeString) EQ  'bigint'>    <cfset returnString = 'int'>  </cfif>  <cfif trim(GetToken(arguments.sqlTypeString,1,'(')) EQ  'char'>    <cfset returnString = 'text'>  </cfif>  <cfif trim(GetToken(arguments.sqlTypeString,1,'(')) EQ  'date'>    <cfset returnString = 'date'>  </cfif>  <cfif trim(GetToken(arguments.sqlTypeString,1,'(')) EQ  'decimal'>    <cfset returnString = 'float'>  </cfif>  <cfif trim(GetToken(arguments.sqlTypeString,1,'(')) EQ  'double'>    <cfset returnString = 'float'>  </cfif>  <cfif trim(GetToken(arguments.sqlTypeString,1,'(')) EQ  'mediumint' OR trim(GetToken(arguments.sqlTypeString,1,'(')) EQ  'int'>    <cfset returnString = 'int'>  </cfif>  <cfif trim(GetToken(arguments.sqlTypeString,1,'(')) EQ  'text' OR trim(GetToken(arguments.sqlTypeString,1,'(')) EQ  'mediumtext' OR trim(GetToken(arguments.sqlTypeString,1,'(')) EQ 'longtext'>    <cfset returnString = 'text'>  </cfif>  <cfif trim(GetToken(arguments.sqlTypeString,1,'(')) EQ  'smallint'>    <cfset returnString = 'int'>  </cfif>  <cfif trim(GetToken(arguments.sqlTypeString,1,'(')) EQ  'tinyint'>    <cfset returnString = 'int'>  </cfif>  <cfif trim(GetToken(arguments.sqlTypeString,1,'(')) EQ  'varchar'>    <cfset returnString = 'text'>  </cfif>  <cfreturn returnString></cffunction></body></html>